4、前端基础，html、css、js


html
1）HTML 全局属性有哪些？
id，class，lang，title，style

2)HTML5 的新特性-自定义属性有哪些？什么是自定义属性？
data-
自定义属性目的∶是为了保存并使用数据

2）html中div+css 的布局较 table 布局有什么优点？
页面加载速度更快、结构化清晰、页面显示简洁。

3） HTML5 的离线储存怎么使用，工作原理能不能解释一下？（5分题）
在file.appcache文件里编写离线存储的资源
原理：
在线时，浏览器发现html头部有manifest属性，就会请求manifest文件，如果是第一次访问，浏览器就会根据manifest文件进行相应资源的下载，如果已经访问过并且已经有资源了，就会使用离线下载的资源。然后对新旧的manifest文件进行比较，如果有改变则重新下载文件中的资源，没有改变就不进行任何操作
离线时：直接使用离线下载的资源

4）前端页面有哪三层构成，分别是什么？作用是什么？
结构层、表示层、行为层。
结构层：由 HTML 或 XHTML 之类的标记语言负责创建。标签，也就是那些出现在尖括号里的单词，对网页内容的语义含义做出了描述，但这些标签不包含任何关于如何显示有关内容的信息。例如，P 标签表达了这样一种语义：“这是一个文本段。”
表示层：由 CSS 负责创建。 CSS 对“如何显示有关内容”的问题做出了回答。
行为层：负责回答“内容应该如何对事件做出反应”这一问题。这是 Javascript 语言和 DOM 主宰的领域。

5）什么是严格模式与混杂模式？
严格模式：以浏览器支持的最高标准运行
混杂模式：页面以宽松向下兼容的方式显示，模拟老式浏览器的行为





css
1）css中padding和margin区别
margin是用来隔开元素与元素的间距;
padding是用来隔开元素与内容的间隔

2）CSS 雪碧图的好处


3）position属性用于元素定位有几种方式，相对定位和绝对定位的区别？


4）有几种像素单位？em和rem有什么区别
 + px
 + rem（相对于根元素html）
 + em (相对于上级元素，没有设置也是根元素)
 + vh和vw 可视区宽高总,共100(vmin,vmax)
 + em相对于父元素(设置font-size)，rem相对于根元素（htm

5）解释页面的回流与重绘，两者的关系 （5分题）






js
1）介绍JavaScript的数据类型
值类型(基本类型)：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol（独一无二的值）。
引用数据类型：对象(Object)、数组(Array)、函数(Function)。


2）判断 js 类型的方式
typeof、Object.prototype.toString.call()、instanceof、constructor


3）栈和堆的区别？
栈（stack）：由编译器自动分配释放，存放函数的参数值，局部变量等；
堆（heap）：一般由程序员分配释放，若程序员不释放，程序结束时可能由操作系统释放。


4）JS 中的主要有哪几类错误
JS有三类的错误:
加载时错误：加载web页面时出现的错误(如语法错误)称为加载时错误，它会动态生成错误。
运行时错误：由于滥用html语言中的命令而导致的错误。
逻辑错误：这些错误是由于对具有不同操作的函数执行了错误的逻辑而导致的


5）JS为什么要区分微任务和宏任务


6) JS延迟加载的方式有哪些？


7) js如何处理防抖和节流？


8) 你如何组织，优化自己的代码？(5分题)


9）描述一下cookies，sessionStorage和localStorage的区别？





5、前端框架


1）vue-loader是什么？使用它的用途有哪些？
解析.vue文件的一个加载器，跟template/js/style转换成js模块。
用途：js可以写es6、style样式可以scss或less、template可以加jade等

2）vuex有哪几种属性？
有五种，分别是 State、 Getter、Mutation 、Action、 Module

3） 请详细说下你对vue生命周期的理解？


4）Vue的双向数据绑定原理是什么？


5）axios是什么？怎么使用？描述使用它实现登录功能的流程？


6）vue-router有哪几种导航钩子
1.全局钩子
2.单个路由独享的
3.组件级的

7）vue中的v-show和v-if是做什么用的，两者区别是什么
v-if 是“真正的”条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。
v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。

8）vue中父组件如何触发子组件的函数，子组件如何触发父组件的函数
父组件中获取子组件函数：$children、$refs
子组件中获取父组件函数：$on

9) 什么是虚拟DOM，与真实DOM有什么区别
虚拟dom比真实dom体积小，操作是相对来说消耗性能少，虚拟Dom不会进行回流和重绘操作
真实Dom频繁的回流和重绘效率非常低





6、开发工具
1）列举工作中常用的几个git命令？
git init
git clone
git add
git commit
git push
git pull
git merge
git diff

git chechout
git branch

2）如果本次提交误操作，如何撤销？


3）提交时发生冲突，你能解释冲突是如何产生的吗？你是如何解决的？
https://www.php.cn/tool/git/493212.html

4）GitFlow工作流程分支有哪些
主要包含，product(master),develop,feature,hotfix,release

5）GitFlow的好处





7、小程序


App(onLaunch onShow onHide onError)
1）小程序中Page的生命周期有哪些？
onLoad: 页面加载(一个页面只会调用一次，可以在 onLoad 中获取打开当前页面所调用的 query 参数。)

onShow: 页面显示(每次打开页面都会调用一次。)

onReady: 页面初次渲染完成(一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。,对界面的设置如wx.setNavigationBarTitle请在onReady之后设置。详见生命周期)

onHide: 页面隐藏(当navigateTo或底部tab切换时调用。)

onUnload: 页面卸载

2）如何阻止小程序的事件冒泡？
catchtap

3）小程序的双向绑定和Vue哪里不一样？


4）说下小程序常用的几种跳转方式，有什么区别？
wx.switchTab()
wx.reLaunch()
wx.navigateTo()
wx.redirectTo()
wx.navigateBack()


5）小程序的发布流程




1、操作系统，docker部署


1） 什么是docker？什么是docker镜像？
docker是一个容器化平台，它以容器的形式将您的应用程序及其所有依赖项打包在一起，以确保您的应用程序在任何环境中无缝运行。
docker镜像是docker容器的源代码，用于创建容器。使用build命令创建镜像。

2） docker与虚拟机有何不同？
docker：启动速度秒级，体量极小（MB），性能近似物理机，
虚拟机：启动速度分钟级，体量较大（GB），性能损耗大。

3）docker常用命令？
docker pull:拉取或者更新指定镜像； 
docker push:将镜像推送至远程仓库； 
docker images:列出所有镜像； 
docker rmi:删除镜像；   
docker ps:列出所有容器； 
docker rm:删除容器

4）前端项目中，docker如何创建容器的镜像？
a. 创建Dockerfile后，docker build创建容器的镜像； 
b. docker push:将镜像推送至远程仓库；

5）docker容器有几种状态？
4种状态：运行+已暂停+重新启动+已退出

6）前端项目CI(持续集成)制作docker镜像以及推送镜像过程是怎样的？
a.创建Dockerfile后，docker build创建容器的镜像； 
b.docker push:将镜像推送至远程仓库；
CI功能就是在每次提交之后不断地集成所有提交到存储库的代码，并编译检查错误





2、http协议，资源加载，调试，性能，跨域请求，避免跨域攻击


1）常见HTTP的状态码有哪些？
200 – 请求成功
301 – 永久重定向
302 - 临时重定向
403 - 禁止访问
404 – 请求的资源(网页等)不存在
500 – 内部服务器错误
502 - 网关无响应

2）HTTP与HTTPS的区别？
a. HTTP 是超文本传输协议，信息是明文传输，HTTPS 则是具有安全性的 SSL 加密传输协议。
b. HTTP和HTTPS 使用完全不同的连接方式，所用的端口不同，前者是80 端口，后者是 443端口。
需要在服务器放校验文件校验，请求响应比较慢

3）请求类型Get与Post之间的区别？
a. get是不安全的，因为URL是可见的，可能会泄露私密信息，如密码等； post较get安全性较高；
b. Get传输的数据量小，因为受URL长度限制，但效率较高；Post可以传输大量数据，所以上传文件时只能用Post方式；
c. get方式只能支持ASCII字符，向服务器传的中文字符可能会乱码。post支持标准字符集，可以正确传递中文字符。

4）TCP和UDP的区别
TCP是基于连接的协议，在正式手法数据前，必须和对方建立可靠的连接。一个TCP连接必须要经过三次“对话”才能建立起来。
UDP是与TCP相对应的协议。它是面向非连接的协议，它不与对方建立连接，而是直接就把数据包发送过去，UDP适用于一次只传送少量数据、对可靠性要求不高的应用环境。

5）资源加载过程发生了什么？
DNS解析、TCP链接、发送http请求、服务器收到、处理请求并返回、浏览器得到返回内容

6）什么是跨域？如何解决跨域？同一域名不同目录算不算跨域？
a. 所谓同源是指"协议+域名+端口"三者相同，即便两个不同的域名指向同一个ip地址，也非同源。
b. 跨域资源共享（CORS）:普通跨域请求只服务端设置Access-Control-Allow-Origin即可，前端无须设置，若要带cookie请求：前后端都需要设置。
c. 不算

7）什么是同源策略？
所谓同源是指"协议+域名+端口"三者相同，即便两个不同的域名指向同一个ip地址，也非同源。





3、算法与数据结构，空间复杂度、时间复杂度的关系，加密算法


1）说一下什么是二分法查找，使用二分法时需要注意什么？
二分法查找（Binary Search）也称折半查找，是指当每次查询时，将数据分为前后两部分，再用中值和待搜索的值进行比较，如果搜索的值大于中值，则使用同样的方式（二分法）向后搜索，反之则向前搜索，直到搜索结束为止。
二分法使用的时候需要注意：二分法只适用于有序的数据，也就是说，数据必须是从小到大，或是从大到小排序的。

2）介绍下什么是时间复杂度，什么是空间复杂度。
时间复杂度：时间复杂度实际上是一个函数，代表基本操作重复执行的次数。
空间复杂度：是对一个算法在运行过程中临时占用存储空间的度量。

3）递归算法的时间复杂度是多少？
递归算法的时间复杂度本质上是要看: 递归的次数 * 每次递归中的操作次数
O(N)

4）递归算法的空间复杂度是多少？
递归算法的空间复杂度：递归深度N*每次递归所要的辅助空间， 如果每次递归所需的辅助空间是常数，则递归的空间复杂度是 O(N).

5）常见的加密算法有几种？他们在使用上有什么区别？
对称加密：对称加密密钥一样（AES首次还是明文的）
非对称加密: 分公钥和私钥
MD5：加密不能解密。。