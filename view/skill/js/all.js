const typeList = [
  { id: 1, sort: 1, title: 'JS', type: 'js', standard: '了解JavaScript基本数据类型（如String、Number、Boolean、Object、Null、Undefined）以及对应数据类型字面量表达式，能够正确应用基本数据类型进行JS编程\n熟悉JavaScript语法结构，熟悉常用的JavaScript内置对象（Array、Date、Math、RegExp、Window、Navigator、Screen、History、Location）以及api，了解Json、JsonP、Ajax原理，能够使用JavaScript进行前端异步编程\n掌握JavaScript的Scope、Closure、Prototype编程技能，能够使用原型继承进行面向对象编程。\n掌握JavaScript模块化设计、类库封装技能，了解ES6、TS(Generator、Promise)等OOP特性，能够进行前端基于JavaScript的控件开发\n理解JavaScript的内存和事件原理（如V8、webkit等），能够定位和分析内存溢出、页面加载慢等问题并优化'},
  { id: 2, sort: 2, title: 'CSS', type: 'css', standard: '了解CSS基础语法（如选择器、声明、属性、值），了解CSS常用单位（尺寸、颜色）和字体样式，能够对HTML页面编写简单的CSS样式\n熟悉CSS Selector（如元素选择器、选择器分组、派生选择器、子元素选择器、相邻兄弟选择器、ID 选择器、类选择器、属性选择器、伪类、伪元素），理解CSS继承原理，能够使用CSS Selector编写复杂样式\n掌握CSS的Priority(权重)、Specificity(特性)、Box Model(盒模型)，能够根据浏览器盒模型的差异进行CSS样式编写\n掌握CSS定位（如相对定位、绝对定位、浮动）技巧，能够使用CSS3媒体查询进行响应式编程，能够针对不同终端页面做响应式开发\n掌握兼容性处理的技巧，理解浏览器回流和重绘原理，理解不同浏览器之间的差异，能够对不同浏览器做兼容器处理。'},
  { id: 3, sort: 3, title: 'HTML', type: 'html', standard: '了解HTML语法结构（如Element、Attribute、Head、Entities、Symbols、Charset等），能够正确使用HTML元素进行web页面开发\n了解静态网页和动态网页的不同，熟悉网页浏览器的工作原理，熟悉HTML、XHTML和HTML5的概念，能够熟练编写HTML页面\n理解HTML排版和渲染过程，能够优化页面和资源的加载和渲染效率\n熟悉HTML DOM事件对象和浏览器加载的事件执行顺序，理解DOM事件冒泡原理，能够使用DOM事件对象进行编程，能够对HTML事件作出反应\n掌握HTML5表单语法结构，能够使用Canvas、Storage、File、Form，EventSource等进行HTML5应用开发'},
  { id: 4, sort: 4, title: 'Docker', type: 'docker', standard: '了解Linux等服务器操作系统，掌握常用Linux命令（如vi、ls、mkdir等），掌握计算机硬件相互通信机制，能够对常用硬件指标（如CPU、内存占有率、进程等）进行查看\n熟悉Linux等服务器操作系统，能够进行前端开发和测试环境（如node环境）的安装、配置\n掌握Docker相关的概念和知识，能够使用Docker的常规命令（如docker ps、docker container、 docker build等）\n掌握基于Docker构建前端应用，并能够根据Docker配置对应的参数进行项目部署\n熟练运用Docker技术，能够实施前端应用Docker并能基于常见的容器平台进行应用部署'},
  { id: 5, sort: 5, title: 'GIT', type: 'git', standard: '掌握代码和包管理工具（git、npm），了解git基本命令，能够进行代码拉取，提交等操作\n掌握前端IDE开发工具，（如VSCode、WebStorm、小程序开发工具等），能够熟练应用开发工具快捷键和功能插件\n熟练掌握git、npm常用命令，能够集中式权限分配，代码冲突处理，代码质量与安全管理\n熟悉运用工具格式化代码，配置代码格式规则，根据不同框架制定开发规范，并且有较强的开发文档编辑能力。（esLint）\n精通git版本管理，能够处理代码冲突、合并、回退等功能'},
  { id: 6, sort: 6, title: 'DATA', type: 'data', standard: '了解基本常用数据结构（数组，集合， 队列等）基本使用场景，并且能够对数据进行简单处理\n理解数据结构的应用方法（定义、步骤），能够简单运用算法与数据结构解决实际开发问题\n熟练掌握数据结构（用法、适用场景、优点），能够根据业务场景抽象并筛选出适合的数据结构，解决实际开发问题\n灵活运用与混搭适用常用数据结构、常用排序算法及递归用法，能够做复杂表格的设计或优化、大数据处理以及展示等\n了解算法时间复杂度和空间复杂度，能够分析程序运算效率问题，能够合理选择算法设计方案'},
  { id: 7, sort: 7, title: 'VUE', type: 'vue', standard: '掌握常用前端库的使用(如vue、react) ，能够掌握基本原理并使用其进行前端应用开发\n熟悉掌握模块化构建工具（Webpack)的使用，能够搭建应用脚手架，能对应用进行压缩、合并、打包等\n熟悉掌握常vue或react常用框架，熟练掌握组件化思想，能够对页面组件进行合理切分并封装，实现代码模块重用\n深入理解vue或react常用框架内部工作原理（如虚拟dom、双向绑定、事件流、模板渲染等），能够熟练使用框架测试套件\n精通前端分层架构设计模式（如MVVM、MVC等）开发应用，能够分析具体运用场景，搭建可拓展的代码结构，了解现流行开发栈，能够分析各框架具体使用场景以及优缺点并完成技术选型，了解Nodejs的基本开发'},
  { id: 8, sort: 8, title: 'WX', type: 'wx', standard: '熟悉掌握小程序的基本目录结构、小程序的文件类型与小程序的基本响应式单位rpx、小程序核心组件，能够在指导下进行小程序开发\n熟悉掌握配置文件与全局配置文件、Page页面的生命周期、单向与简易双向数据绑定、列表渲染、小程序的MVVM模式、小程序的路由系统，能够独立进行小程序开发\n熟悉掌握自定义组件、组件与模板的区别、页面与组件的属性、组件的监听器，能够运用组件进行小程序开发\n深入理解小程序与服务端API通信、小程序的核心开放API、小程序的wx.request、异步编程async与await、ES6语法，并且能够搭建小程序基础架构\n精通小程序和服务端通信逻辑、setData的意义和特点、小程序渲染原理、能够优化小程序性能和小程序架构，实现多人共建能力。'},
  { id: 9, sort: 9, title: '协议', type: 'xy', standard: '了解常见HTTP通信协议原理机制与其请求方式（如GET、POST、PUT等），能够了解常用响应的状态码（如40X、50X）\n了解TCP/IP协议簇，能够列举该协议簇衍生的协议（如HTTP、FTP、HTTPS、UDP)，能够充分了解各类协议其应用场景区别与优劣势\n理解HTTP和HTTPS协议，能够进行完整的页面调试及开发，能够排查常见的资源加载问题和加载性能问题\n深入理解HTTP和HTTPS协议的多种认证方式（如Oauth2），能够完成web认证功能的开发\n懂得跨域请求和跨域攻击的原理，能够使用JSONP或Nginx或CORS解决跨域问题，并懂得如何在开发中避免跨域攻击、伪造请求攻击'},
  { id: 10, sort: 10, title: 'WP', type: 'webpack'},
]